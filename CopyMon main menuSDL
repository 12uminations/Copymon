#include <SDL.h>
#include <SDL_ttf.h>
#include <SDL_image.h>
#include <string>
#include <iostream>
#include <SDL_mixer.h>

using namespace std;

const int SCREEN_WIDTH = 1280;
const int SCREEN_HEIGHT = 720;
const string WINDOW_TITLE = "Copymon";

int init = SDL_Init(SDL_INIT_EVERYTHING);
int init2 = Mix_Init(0);

SDL_Window* window = nullptr;
SDL_Renderer* renderer = nullptr;
TTF_Font* font = nullptr;
SDL_Color font_color = { 255, 255, 255 };
SDL_Rect start_button;
SDL_Rect exit_button;
SDL_Texture* background_texture = nullptr;

void InitSDL() {
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        cout << "SDL could not initialize! SDL_Error: " << SDL_GetError() << endl;
        exit(1);
    }
    window = SDL_CreateWindow(WINDOW_TITLE.c_str(), SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
    if (!window) {
        cout << "Window could not be created! SDL_Error: " << SDL_GetError() << endl;
        exit(1);
    }
    renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        cout << "Renderer could not be created! SDL_Error: " << SDL_GetError() << endl;
        exit(1);
    }
    if (TTF_Init() < 0) {
        cout << "SDL_ttf could not initialize! SDL_ttf Error: " << TTF_GetError() << endl;
        exit(1);
    }
    font = TTF_OpenFont("Pokemon Solid.ttf", 36);
    if (!font) {
        cout << "Failed to load font! SDL_ttf Error: " << TTF_GetError() << endl;
        exit(1);
    }
    if (IMG_Init(IMG_INIT_PNG) != IMG_INIT_PNG) {
        cout << "SDL_image could not initialize! SDL_image Error: " << IMG_GetError() << endl;
        exit(1);
    }
}

void QuitSDL() {
    TTF_CloseFont(font);
    TTF_Quit();
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_DestroyTexture(background_texture);
    SDL_Quit();
}

void LoadTextures() {
    SDL_Surface* surface = IMG_Load("CopymonBG.png");
    if (!surface) {
        cerr << "Failed to load background image! SDL_image Error: " << IMG_GetError() << endl;
        exit(1);
    }
    background_texture = SDL_CreateTextureFromSurface(renderer, surface);
    SDL_FreeSurface(surface);
}

void DrawText(string text, int x, int y) {
    SDL_Surface* surface = TTF_RenderText_Solid(font, text.c_str(), font_color);
    SDL_Texture* texture = SDL_CreateTextureFromSurface(renderer, surface);
    SDL_Rect rect = { x, y, surface->w, surface->h };
    SDL_FreeSurface(surface);
    SDL_RenderCopy(renderer, texture, nullptr, &rect);
    SDL_DestroyTexture(texture);
}

void DrawButton(SDL_Rect rect, string text) {
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 0);
    SDL_RenderFillRect(renderer, &rect);
    DrawText(text, rect.x + 60, rect.y + 15);
}

bool CheckCollision(int x, int y, SDL_Rect rect) {
    if (x > rect.x && x < rect.x + rect.w && y > rect.y && y < rect.y + rect.h) {
        return true;
    }
    return false;
}

int main(int argc, char* argv[]) {
    InitSDL();
    LoadTextures();
    bool running = true;
    bool game_running = false;

    Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 1024);
    Mix_Music* music = Mix_LoadMUS("Pokemonsong.wav");
    if (!music) {
        cout << "Music Error: " << Mix_GetError() << endl;
    }
    Mix_Chunk* sound = Mix_LoadWAV("Pokemon.wav");
    if (!sound) {
        cout << "sound Error: " << Mix_GetError() << endl;
    }

    Mix_PlayMusic(music, -1);

    start_button = { SCREEN_WIDTH / 2 - 125, SCREEN_HEIGHT / 2 - (-10), 225, 75};
    exit_button = { SCREEN_WIDTH / 2 - 125, SCREEN_HEIGHT / 2 + 150, 225, 75 };

    while (running) {

        SDL_RenderCopy(renderer, background_texture, nullptr, nullptr); // render background texture first

        DrawButton(start_button, "Start");
        DrawButton(exit_button, " Exit");

        SDL_RenderPresent(renderer);

        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            switch (event.type) {
            case SDL_QUIT:
                running = false;
                break;
            case SDL_MOUSEBUTTONDOWN:
                if (CheckCollision(event.button.x, event.button.y, start_button)) {
                    Mix_PlayChannel(0, sound, 0);
                    game_running = true; 
                }
                else if (CheckCollision(event.button.x, event.button.y, exit_button)) {
                    Mix_PlayChannel(0, sound, 0);
                    running = false;
                }
                break;
            }
        }

        if (game_running) {
            // start your game here
            game_running = false;
        }
    }

    QuitSDL();
    return 0;
}
